@model SMSAlarmSystem.Controllers.DashboardViewModel
@*
작성자: Sangchan, Kim
작성일: 2025-04-01
기능: SMS 알람 관리 시스템 대시보드 페이지
설명: 시스템 개요, 통계 정보 및 최근 활동을 Tailwind CSS 스타일의 UI로 표시합니다.
*@

@{
    ViewData["Title"] = "대시보드";
}

<div class="container mx-auto px-4 py-6">
    <div class="flex flex-col md:flex-row gap-6">
        <!-- 왼쪽 사이드바 -->
        <div class="w-full md:w-1/4">
            <!-- 시스템 개요 카드 -->
            <div class="bg-white rounded-lg shadow-md mb-6">
                <div class="p-4">
                    <h2 class="text-lg font-semibold text-gray-700 mb-3">시스템 개요</h2>
                    <ul class="space-y-2">
                        <li class="flex justify-between">
                            <span class="text-gray-600">총 메시지:</span>
                            <span class="font-medium">@(Model?.Statistics?.TotalMessages ?? 0)</span>
                        </li>
                        <li class="flex justify-between">
                            <span class="text-gray-600">활성 그룹:</span>
                            <span class="font-medium">@(Model?.Statistics?.ActiveGroups ?? 0)</span>
                        </li>
                        <li class="flex justify-between">
                            <span class="text-gray-600">활성 회원:</span>
                            <span class="font-medium">@(Model?.Statistics?.ActiveMembers ?? 0)</span>
                        </li>
                        <li class="flex justify-between">
                            <span class="text-gray-600">활성 알람 포인트:</span>
                            <span class="font-medium">@(Model?.Statistics?.ActiveAlarmPoints ?? 0)</span>
                        </li>
                    </ul>
                </div>
            </div>

            <!-- 최근 메시지 목록 카드 -->
            <div class="bg-white rounded-lg shadow-md">
                <div class="p-4">
                    <h2 class="text-lg font-semibold text-gray-700 mb-3">최근 메시지</h2>
                    @if (Model?.RecentMessages != null && Model.RecentMessages.Any())
                    {
                        <ul class="space-y-3">
                            @foreach (var message in Model.RecentMessages.Take(5))
                            {
                                <li class="border-b border-gray-100 pb-2">
                                    <p class="text-xs text-gray-500">@(message?.SendTime.ToString("MM/dd HH:mm") ?? "-")</p>
                                    <p class="text-sm">
                                        @(message?.Content?.Length > 30
                                            ? message.Content.Substring(0, 30) + "..."
                                            : message?.Content ?? "내용 없음")
                                    </p>
                                </li>
                            }
                        </ul>
                    }
                    else
                    {
                        <p class="text-gray-500 text-center py-4">최근 메시지가 없습니다.</p>
                    }
                </div>
            </div>
        </div>

        <!-- 메인 컨텐츠 영역 -->
        <div class="w-full md:w-3/4">
            <!-- 차트 영역 -->
            <div class="bg-white rounded-lg shadow-md mb-6">
                <div class="p-4">
                    <div class="flex justify-between items-center mb-4">
                        <h2 class="text-lg font-semibold text-gray-700">메시지 발송 현황</h2>
                        <!-- 데이터 조회 기간 버튼 -->
                        <div class="flex space-x-1">
                            <a href="@Url.Action("Index", new { period = "weekly" })"
                               class="@(Model?.SelectedPeriod == "weekly"
                                    ? "bg-blue-500 text-white"
                                    : "bg-white text-gray-700 border border-gray-300")
                                    px-3 py-1 rounded text-sm hover:bg-blue-600 hover:text-white transition duration-200">
                                주간
                            </a>
                            <a href="@Url.Action("Index", new { period = "monthly" })"
                               class="@(Model?.SelectedPeriod == "monthly"
                                    ? "bg-blue-500 text-white"
                                    : "bg-white text-gray-700 border border-gray-300")
                                    px-3 py-1 rounded text-sm hover:bg-blue-600 hover:text-white transition duration-200">
                                월간
                            </a>
                            <a href="@Url.Action("Index", new { period = "yearly" })"
                               class="@(Model?.SelectedPeriod == "yearly"
                                    ? "bg-blue-500 text-white"
                                    : "bg-white text-gray-700 border border-gray-300")
                                    px-3 py-1 rounded text-sm hover:bg-blue-600 hover:text-white transition duration-200">
                                연간
                            </a>
                        </div>
                    </div>
                    <div class="h-80">
                        <canvas id="messageChart"></canvas>
                    </div>
                </div>
            </div>

            <!-- 통계 카드 그리드 -->
            <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4">
                <!-- 총 메시지 카드 -->
                <div class="bg-white rounded-lg shadow-md p-4">
                    <h3 class="text-sm font-medium text-gray-500 mb-1">총 메시지</h3>
                    <p class="text-2xl font-bold">@(Model?.Statistics?.TotalMessages ?? 0)</p>
                </div>

                <!-- 성공 메시지 카드 -->
                <div class="bg-white rounded-lg shadow-md p-4">
                    <h3 class="text-sm font-medium text-gray-500 mb-1">성공 메시지</h3>
                    <p class="text-2xl font-bold text-green-600">@(Model?.Statistics?.SuccessMessages ?? 0)</p>
                </div>

                <!-- 실패 메시지 카드 -->
                <div class="bg-white rounded-lg shadow-md p-4">
                    <h3 class="text-sm font-medium text-gray-500 mb-1">실패 메시지</h3>
                    <p class="text-2xl font-bold text-red-600">@(Model?.Statistics?.FailedMessages ?? 0)</p>
                </div>

                <!-- 활성 알람 포인트 카드 -->
                <div class="bg-white rounded-lg shadow-md p-4">
                    <h3 class="text-sm font-medium text-gray-500 mb-1">활성 알람 포인트</h3>
                    <p class="text-2xl font-bold text-blue-600">@(Model?.Statistics?.ActiveAlarmPoints ?? 0)</p>
                </div>
            </div>
        </div>
    </div>
</div>
@using Newtonsoft.Json

@{
    var labels = Model?.ChartData?.Labels != null ? JsonConvert.SerializeObject(Model.ChartData.Labels) : "[]";
    var successData = Model?.ChartData?.SuccessData != null ? JsonConvert.SerializeObject(Model.ChartData.SuccessData) : "[]";
    var failedData = Model?.ChartData?.FailedData != null ? JsonConvert.SerializeObject(Model.ChartData.FailedData) : "[]";
}
@section Scripts {
    <!-- Chart.js 라이브러리 및 시간 어댑터 추가 -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/moment"></script>
    <script src="https://cdn.jsdelivr.net/npm/chartjs-adapter-moment"></script>
    <script>
        /**
         * 작성자: Sangchan, Kim
         * 작성일: 2025-04-01
         * 기능: 메시지 발송 현황 차트 구현
         * 설명: 주간/월간/연간 데이터를 시각화하고 차트 스타일을 사용자 요구에 맞게 조정합니다.
         */
        document.addEventListener('DOMContentLoaded', function () {
            // 차트를 그릴 캔버스 요소 가져오기
            var ctx = document.getElementById('messageChart').getContext('2d');
            // 데이터 파싱 (null 체크 포함)
            var labels = @Html.Raw(labels);
            var successData = @Html.Raw(successData);
            var failedData = @Html.Raw(failedData);

            var messageChart = new Chart(ctx, {
                type: 'line',
                data: {
                    labels: labels,
                    datasets: [{
                        label: '성공',
                        data: successData,
                        borderColor: '#10B981',
                        backgroundColor: 'rgba(16, 185, 129, 0.1)',
                        tension: 0.2,
                        borderWidth: 2
                    }, {
                        label: '실패',
                        data: failedData,
                        borderColor: '#EF4444',
                        backgroundColor: 'rgba(239, 68, 68, 0.1)',
                        tension: 0.2,
                        borderWidth: 2
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            position: 'left',// 범례를 왼쪽에 세로로 배치
                            align: 'start' // 범례를 왼쪽으로 정렬
                        },
                        tooltip: {
                            mode: 'index',
                            intersect: false
                        }
                    },
                    scales: {
                        y: {
                            beginAtZero: true,
                            grid: {
                                color: 'rgba(0, 0, 0, 0.05)',
                                        display: false  // y축 그리드 라인 제거
                            },
                            ticks: {
                                precision: 0  // 소수점 자릿수를 0으로 설정 (정수만 표시)
                            }
                        },
                        x: {
                            grid: {
                                color: 'rgba(0, 0, 0, 0.05)',
                                        display: false  // y축 그리드 라인 제거
                            }
                        }
                    }
                }
            });
        });

    </script>
}
