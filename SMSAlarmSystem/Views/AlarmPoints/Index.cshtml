@model PaginatedViewModel<SMSAlarmSystem.Core.Models.AlarmPoint>

@{
    ViewData["Title"] = "알람 포인트 목록";
}

<!-- 작성자: Sangchan, Kim -->
<!-- 작성일: 2025-04-01 -->
<!-- 기능: 알람 포인트 목록 페이지 -->
<!-- 설명: 시스템에 등록된 모든 알람 포인트를 페이지네이션이 적용된 목록으로 표시합니다. -->
<div class="container mx-auto px-4 py-8">
    <!-- 페이지 헤더 영역 - 제목과 생성 버튼 -->
    <div class="flex justify-between items-center mb-6">
        <h1 class="text-2xl font-bold text-gray-800">알람 포인트 목록</h1>
        <div class="flex space-x-2">
            <!-- 페이지 크기 선택 드롭다운 -->
            <form method="get" class="flex items-center">
                <select id="pageSize" name="pageSize" onchange="this.form.submit()"
                        class="border border-gray-300 rounded-md px-2 py-1 text-sm">
                    <option value="10" selected="@(Model.PageSize == 10)">10개씩 보기</option>
                    <option value="20" selected="@(Model.PageSize == 20)">20개씩 보기</option>
                    <option value="50" selected="@(Model.PageSize == 50)">50개씩 보기</option>
                </select>
                <input type="hidden" name="page" value="1" />
            </form>
            <!-- 새 알람 포인트 등록 버튼 -->
            <a asp-action="Create" class="bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded-lg">
                새 알람 포인트 등록
            </a>
        </div>
    </div>

    <!-- 알람 포인트 목록 테이블 -->
    <div class="bg-white shadow-md rounded-lg overflow-hidden">
        <table class="min-w-full divide-y divide-gray-200">
            <!-- 테이블 헤더 -->
            <thead class="bg-gray-50">
                <tr>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                        이름
                    </th>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                        설명
                    </th>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                        조건
                    </th>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                        메시지 그룹
                    </th>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                        상태
                    </th>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                        작업
                    </th>
                </tr>
            </thead>
            <!-- 테이블 본문 -->
            <tbody class="bg-white divide-y divide-gray-200">
                @if (Model?.Items != null && Model.Items.Any())
                {
                    <!-- 모델이 존재할 경우 항목 반복 -->
                    @foreach (var item in Model.Items)
                    {
                        <tr>
                            <!-- 이름 열 - null 체크 추가 -->
                            <td class="px-6 py-4 whitespace-nowrap">
                                @(item?.Name ?? "이름 없음")
                            </td>

                            <!-- 설명 열 - null 체크 추가 -->
                            <td class="px-6 py-4 whitespace-nowrap">
                                @(item?.Description ?? "설명 없음")
                            </td>

                            <!-- 조건 열 - null 체크 추가 -->
                            <td class="px-6 py-4 whitespace-nowrap">
                                @(item?.Condition ?? "조건 없음")
                            </td>

                            <!-- 메시지 그룹 열 - null 체크 추가 (MessageGroup 객체가 null일 수 있음) -->
                            <td class="px-6 py-4 whitespace-nowrap">
                                @(item?.MessageGroup?.Name ?? "그룹 없음")
                            </td>

                            <!-- 활성 상태 열 - null 체크 및 기본값 설정 -->
                            <td class="px-6 py-4 whitespace-nowrap">
                                @if (item?.IsActive == true)
                                {
                                    <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-green-100 text-green-800">
                                        활성
                                    </span>
                                }
                                else
                                {
                                    <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-red-100 text-red-800">
                                        비활성
                                    </span>
                                }
                            </td>

                            <!-- 작업 열 - 항목이 null이 아닌 경우에만 링크 표시 -->
                            <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                                @if (item != null)
                                {
                                    <a asp-action="Edit" asp-route-id="@item.Id" class="text-indigo-600 hover:text-indigo-900 mr-3">수정</a>
                                    <a asp-action="Details" asp-route-id="@item.Id" class="text-blue-600 hover:text-blue-900 mr-3">상세</a>
                                    <a asp-action="Delete" asp-route-id="@item.Id" class="text-red-600 hover:text-red-900 mr-3">삭제</a>
                                    <a asp-action="Trigger" asp-route-id="@item.Id" class="text-orange-600 hover:text-orange-900">트리거</a>
                                }
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <!-- 데이터가 없는 경우 표시할 메시지 -->
                    <tr>
                        <td colspan="6" class="px-6 py-4 text-center text-gray-500">
                            표시할 알람 포인트가 없습니다.
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <!-- 페이지네이션 컨트롤 -->
    @if (Model?.TotalPages > 1)
    {
        <div class="flex justify-center mt-6">
            <nav class="inline-flex rounded-md shadow-sm -space-x-px" aria-label="페이지네이션">
                <!-- 이전 페이지 버튼 -->
                @if (Model.HasPreviousPage)
                {
                    <a href="@GetPageUrl(Model.CurrentPage - 1)"
                       class="relative inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50">
                        <span class="sr-only">이전</span>
                        <!-- 이전 아이콘 -->
                        <svg class="h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                            <path fill-rule="evenodd" d="M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z" clip-rule="evenodd" />
                        </svg>
                    </a>
                }
                else
                {
                    <span class="relative inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 bg-gray-100 text-sm font-medium text-gray-400 cursor-not-allowed">
                        <span class="sr-only">이전</span>
                        <!-- 이전 아이콘 -->
                        <svg class="h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                            <path fill-rule="evenodd" d="M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z" clip-rule="evenodd" />
                        </svg>
                    </span>
                }

                <!-- 페이지 번호 버튼 -->
                @{
                    var startPage = Math.Max(1, Model.CurrentPage - 2);
                    var endPage = Math.Min(Model.TotalPages, startPage + 4);

                    if (endPage - startPage < 4 && Model.TotalPages > 4)
                    {
                        startPage = Math.Max(1, endPage - 4);
                    }
                }

                @for (var i = startPage; i <= endPage; i++)
                {
                    if (i == Model.CurrentPage)
                    {
                        <span class="relative inline-flex items-center px-4 py-2 border border-blue-500 bg-blue-50 text-sm font-medium text-blue-600">
                            @i
                        </span>
                    }
                    else
                    {
                        <a href="@GetPageUrl(i)"
                           class="relative inline-flex items-center px-4 py-2 border border-gray-300 bg-white text-sm font-medium text-gray-700 hover:bg-gray-50">
                            @i
                        </a>
                    }
                }

                <!-- 다음 페이지 버튼 -->
                @if (Model.HasNextPage)
                {
                    <a href="@GetPageUrl(Model.CurrentPage + 1)"
                       class="relative inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50">
                        <span class="sr-only">다음</span>
                        <!-- 다음 아이콘 -->
                        <svg class="h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                            <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd" />
                        </svg>
                    </a>
                }
                else
                {
                    <span class="relative inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 bg-gray-100 text-sm font-medium text-gray-400 cursor-not-allowed">
                        <span class="sr-only">다음</span>
                        <!-- 다음 아이콘 -->
                        <svg class="h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                            <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd" />
                        </svg>
                    </span>
                }
            </nav>
        </div>

        <!-- 페이지 정보 표시 -->
        <div class="text-center text-sm text-gray-500 mt-2">
            총 @(Model.TotalItems)개 항목 중 @((Model.CurrentPage - 1) * Model.PageSize + 1)~@(Math.Min(Model.CurrentPage * Model.PageSize, Model.TotalItems))개 표시 (총 @Model.TotalPages 페이지)
        </div>
    }
    else
    {
        <!-- 페이지가 1개 이하인 경우 정보만 표시 -->
        @if (Model?.TotalItems > 0)
        {
            <div class="text-center text-sm text-gray-500 mt-6">
                총 @(Model.TotalItems)개 항목 표시
            </div>
        }
    }
</div>

@functions {
    /// <summary>
    /// 페이지 URL 생성 함수 - 현재 필터 조건을 유지하면서 페이지만 변경
    /// </summary>
    /// <param name="page">이동할 페이지 번호</param>
    /// <returns>페이지 URL 문자열</returns>
    private string GetPageUrl(int page)
    {
        var pageSize = Context.Request.Query["pageSize"].ToString() ?? Model.PageSize.ToString();

        return Url.Action("Index", new
        {
            page = page,
            pageSize = pageSize
        }) ?? "";
    }
}
