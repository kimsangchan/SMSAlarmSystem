@model PaginatedViewModel<SMSAlarmSystem.Core.Models.Message>

@{
    ViewData["Title"] = "메시지 내역";
}

<!-- 작성자: Sangchan, Kim -->
<!-- 작성일: 2025-04-01 -->
<!-- 기능: 메시지 내역 목록 표시 및 페이지네이션 -->
<!-- 설명: 날짜 범위로 메시지를 필터링하고 페이지네이션이 적용된 목록을 표시합니다. -->
<div class="container mx-auto px-4 py-8">
    <!-- 페이지 헤더 영역 -->
    <div class="mb-6">
        <!-- 페이지 제목 -->
        <h1 class="text-2xl font-bold text-gray-800 mb-4">메시지 내역</h1>

        <!-- 날짜 범위 필터 폼 -->
        <form method="get" class="bg-white p-4 rounded-lg shadow-md mb-6">
            <div class="flex flex-wrap -mx-2">
                <!-- 시작일 선택 -->
                <div class="px-2 w-full md:w-1/4 mb-4 md:mb-0">
                    <label for="startDate" class="block text-sm font-medium text-gray-700 mb-1">시작일</label>
                    <input type="date" id="startDate" name="startDate" value="@ViewBag.StartDate"
                           class="w-full px-3 py-2 border border-gray-300 rounded-md">
                </div>
                <!-- 종료일 선택 -->
                <div class="px-2 w-full md:w-1/4 mb-4 md:mb-0">
                    <label for="endDate" class="block text-sm font-medium text-gray-700 mb-1">종료일</label>
                    <input type="date" id="endDate" name="endDate" value="@ViewBag.EndDate"
                           class="w-full px-3 py-2 border border-gray-300 rounded-md">
                </div>
                <!-- 페이지 크기 선택 -->
                <div class="px-2 w-full md:w-1/4 mb-4 md:mb-0">
                    <label for="pageSize" class="block text-sm font-medium text-gray-700 mb-1">표시 개수</label>
                    <select id="pageSize" name="pageSize" class="w-full px-3 py-2 border border-gray-300 rounded-md">
                        <option value="10" selected="@(Model.PageSize == 10)">10개</option>
                        <option value="20" selected="@(Model.PageSize == 20)">20개</option>
                        <option value="50" selected="@(Model.PageSize == 50)">50개</option>
                        <option value="100" selected="@(Model.PageSize == 100)">100개</option>
                    </select>
                </div>

                <!-- 조회 버튼 -->
                <div class="px-2 w-full md:w-1/4 flex items-end">
                    <button type="submit" class="w-full bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded-md">
                        조회
                    </button>
                </div>
            </div>
            <!-- 페이지 번호는 숨겨서 전송 (페이지 변경 시 기존 필터 유지) -->
            <input type="hidden" name="page" value="1" />
        </form>
    </div>

    <!-- 메시지 목록 테이블 -->
    <div class="bg-white shadow-md rounded-lg overflow-hidden">
        <table class="min-w-full divide-y divide-gray-200">
            <!-- 테이블 헤더 -->
            <thead class="bg-gray-50">
                <tr>
                    <!-- 발송 시간 열 헤더 -->
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                        발송 시간
                    </th>
                    <!-- 알람 포인트 열 헤더 -->
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                        알람 포인트
                    </th>
                    <!-- 메시지 그룹 열 헤더 -->
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                        메시지 그룹
                    </th>
                    <!-- 메시지 내용 열 헤더 -->
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                        내용
                    </th>
                    <!-- 상태 열 헤더 -->
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                        상태
                    </th>
                    <!-- 작업 열 헤더 -->
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                        작업
                    </th>
                </tr>
            </thead>
            <!-- 테이블 본문 -->
            <tbody class="bg-white divide-y divide-gray-200">
                @if (Model?.Items != null && Model.Items.Any())
                {
                    <!-- 메시지 항목 반복 -->
                    @foreach (var item in Model.Items)
                    {
                        <tr>
                            <!-- 발송 시간 열 - null 체크 -->
                            <td class="px-6 py-4 whitespace-nowrap">
                                @(item?.SendTime.ToString("yyyy-MM-dd HH:mm:ss") ?? "시간 정보 없음")
                            </td>
                            <!-- 알람 포인트 열 - null 체크 -->
                            <td class="px-6 py-4 whitespace-nowrap">
                                @(item?.AlarmPoint?.Name ?? "알람 포인트 정보 없음")
                            </td>
                            <!-- 메시지 그룹 열 - null 체크 -->
                            <td class="px-6 py-4 whitespace-nowrap">
                                @(item?.MessageGroup?.Name ?? "그룹 정보 없음")
                            </td>
                            <!-- 메시지 내용 열 - 길이가 길 경우 잘라서 표시, null 체크 -->
                            <td class="px-6 py-4">
                                <div class="truncate max-w-xs">
                                    @(item?.Content ?? "내용 없음")
                                </div>
                            </td>
                            <!-- 상태 열 - 상태에 따라 다른 스타일 적용, null 체크 -->
                            <td class="px-6 py-4 whitespace-nowrap">
                                @if (item?.Status == "발송 완료")
                                {
                                    <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-green-100 text-green-800">
                                        @item.Status
                                    </span>
                                }
                                else if (item?.Status == "발송 중")
                                {
                                    <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-yellow-100 text-yellow-800">
                                        @item.Status
                                    </span>
                                }
                                else if (item?.Status == "일부 발송 실패")
                                {
                                    <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-orange-100 text-orange-800">
                                        @item.Status
                                    </span>
                                }
                                else if (item?.Status == "발송 실패")
                                {
                                    <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-red-100 text-red-800">
                                        @item.Status
                                    </span>
                                }
                                else
                                {
                                    <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-gray-100 text-gray-800">
                                        @(item?.Status ?? "상태 정보 없음")
                                    </span>
                                }
                            </td>
                            <!-- 작업 열 - 상세 보기 링크, null 체크 -->
                            <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                                @if (item != null)
                                {
                                    <a asp-action="Details" asp-route-id="@item.Id" class="text-blue-600 hover:text-blue-900">상세</a>
                                }
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <!-- 데이터가 없는 경우 표시할 메시지 -->
                    <tr>
                        <td colspan="6" class="px-6 py-4 text-center text-gray-500">
                            표시할 메시지 내역이 없습니다.
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    
    <!-- 페이지네이션 컨트롤 -->
    @if (Model?.TotalPages > 1)
    {
        <div class="flex justify-center mt-6">
            <nav class="inline-flex rounded-md shadow-sm -space-x-px" aria-label="페이지네이션">
                <!-- 이전 페이지 버튼 -->
                @if (Model.HasPreviousPage)
                {
                    <a href="@GetPageUrl(Model.CurrentPage - 1)" 
                       class="relative inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50">
                        <span class="sr-only">이전</span>
                        <!-- 이전 아이콘 -->
                        <svg class="h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                            <path fill-rule="evenodd" d="M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z" clip-rule="evenodd" />
                        </svg>
                    </a>
                }
                else
                {
                    <span class="relative inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 bg-gray-100 text-sm font-medium text-gray-400 cursor-not-allowed">
                        <span class="sr-only">이전</span>
                        <!-- 이전 아이콘 -->
                        <svg class="h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                            <path fill-rule="evenodd" d="M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z" clip-rule="evenodd" />
                        </svg>
                    </span>
                }
                
                <!-- 페이지 번호 버튼 -->
                @{
                    var startPage = Math.Max(1, Model.CurrentPage - 2);
                    var endPage = Math.Min(Model.TotalPages, startPage + 4);
                    
                    if (endPage - startPage < 4 && Model.TotalPages > 4)
                    {
                        startPage = Math.Max(1, endPage - 4);
                    }
                }
                
                @for (var i = startPage; i <= endPage; i++)
                {
                    if (i == Model.CurrentPage)
                    {
                        <span class="relative inline-flex items-center px-4 py-2 border border-blue-500 bg-blue-50 text-sm font-medium text-blue-600">
                            @i
                        </span>
                    }
                    else
                    {
                        <a href="@GetPageUrl(i)" 
                           class="relative inline-flex items-center px-4 py-2 border border-gray-300 bg-white text-sm font-medium text-gray-700 hover:bg-gray-50">
                            @i
                        </a>
                    }
                }
                
                <!-- 다음 페이지 버튼 -->
                @if (Model.HasNextPage)
                {
                    <a href="@GetPageUrl(Model.CurrentPage + 1)" 
                       class="relative inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50">
                        <span class="sr-only">다음</span>
                        <!-- 다음 아이콘 -->
                        <svg class="h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                            <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd" />
                        </svg>
                    </a>
                }
                else
                {
                    <span class="relative inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 bg-gray-100 text-sm font-medium text-gray-400 cursor-not-allowed">
                        <span class="sr-only">다음</span>
                        <!-- 다음 아이콘 -->
                        <svg class="h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                            <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd" />
                        </svg>
                    </span>
                }
            </nav>
        </div>
        
        <!-- 페이지 정보 표시 -->
        <div class="text-center text-sm text-gray-500 mt-2">
            총 @(Model.TotalItems)개 항목 중 @((Model.CurrentPage - 1) * Model.PageSize + 1)~@(Math.Min(Model.CurrentPage * Model.PageSize, Model.TotalItems))개 표시 (총 @Model.TotalPages 페이지)
        </div>
    }
    else
    {
        <!-- 페이지가 1개 이하인 경우 정보만 표시 -->
        @if (Model?.TotalItems > 0)
        {
            <div class="text-center text-sm text-gray-500 mt-6">
                총 @(Model.TotalItems)개 항목 표시
            </div>
        }
    }
</div>

@functions {
    private string GetPageUrl(int page)
    {
        var startDate = Context.Request.Query["startDate"].ToString() ?? "";
        var endDate = Context.Request.Query["endDate"].ToString() ?? "";
        var pageSize = Context.Request.Query["pageSize"].ToString() ?? Model.PageSize.ToString();

        return Url.Action("Index", new
        {
            page = page,
            pageSize = pageSize,
            startDate = startDate,
            endDate = endDate
        }) ?? "";
    }
}

